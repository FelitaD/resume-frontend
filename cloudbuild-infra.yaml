steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  secretEnv: ['GOOGLE_CREDENTIALS']
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME
        terraform init
      else
        for dir in terraform/environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 

- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  secretEnv: ['GOOGLE_CREDENTIALS']
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME
        terraform plan
      else
        for dir in terraform/environments/*/
        do 
          cd ${dir}   
          env=${dir%*/}
          env=${env#*/}  
          echo ""
          echo "*************** TERRAFOM PLAN ******************"
          echo "******* At environment: ${env} ********"
          echo "*************************************************"
          terraform plan || exit 1
          cd ../../
        done
      fi 

- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  secretEnv: ['GOOGLE_CREDENTIALS']
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "terraform/environments/$BRANCH_NAME/" ]; then
        cd terraform/environments/$BRANCH_NAME      
        terraform apply -auto-approve
        terraform output lb_ip_address
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi 

# - id: 'cypress'
#   name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'cypress-test', './tests/']

# - id: 'smoke test'
#   name: 'docker'
#   args: ['run', 'cypress-test']

availableSecrets:
  secretManager:
  - versionName: projects/resume-404711/secrets/google_credentials/versions/1
    env: 'GOOGLE_CREDENTIALS'
